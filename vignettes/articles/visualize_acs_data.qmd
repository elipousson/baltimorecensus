---
title: "visualize_acs_data"
format: html
editor: visual
params:
  save_plot: true
---

```{r setup}
# library(baltimorecensus)
library(tidyverse)
library(forcats)
library(pilot)
library(stringr)
library(ggplot2)
library(gt)
```

# Load variables and data across geography levels

```{r}
# select_area <- "John Ruhrah EMS (Expanded)"
# select_area_name <- select_area
# select_area_name_plot <- "John Ruhrah EMS Area"
# select_area_label <- "john-ruhrah-ems"

select_area <- "Govans ES (Expanded)"
select_area_name <- select_area
select_area_name_plot <- "Govans ES Area"
select_area_label <- "govans-es"
select_fileext <- "png"

# select_area <- "REACH + Harford Heights Area (Expanded)"
# select_area_name <- "REACH and HH Building"
# select_area_name_plot <- "REACH and HH Building Area"
# select_area_label <- "reach-harford-heights"

select_counties <- "Baltimore city, Maryland"
select_counties_name <- "Baltimore City"
select_state <- "MD"
select_msa <- "Baltimore-Columbia-Towson, MD Metro Area"
select_msa_name <- "Baltimore MSA"
```

```{r}
geography_levels <- c(select_area_name, select_counties, select_msa)

geography_levels <-
  rlang::set_names(
    geography_levels,
    c(
      select_area_name_plot,
      select_counties_name,
      select_msa_name
    )
  )

combine_acs <-
  combine_acs_geography_levels(
    data = c(
      "inspire_acs2021_acs5yr.rda", "inspire_exp_acs2021_acs5yr.rda",
      "maryland_counties_acs2021_acs5yr.rda", "msa_acs2021_acs5yr.rda",
      "baltimorecity_tract_acs2021_acs5yr.rda"
    ),
    levels = geography_levels,
    .col = "name"
  )
```

# Summary

```{r}
tables <- c("B19013", "B25003", "B01003")


# FIXME: There should be a helper to pull a table and then rename columns
area_summary_data <- combine_acs %>%
  pull_table(table = "B19013") %>%
  select(
    name,
    median_income_estimate = estimate,
    median_income_moe = moe
  ) |>
  left_join(
    combine_acs |>
      pull_table(table = "B01003") |>
      select(
        name,
        total_population_estimate = estimate,
        total_population_moe = moe
      )
  ) |>
  left_join(
    combine_acs |>
      pull_table(
        table = "B25003",
        vars = "B25003_001"
      ) |>
      select(
        name,
        occupied_units_estimate = estimate,
        occupied_units_moe = moe
      )
  ) |>
  select(any_of("name"), ends_with("estimate"), ends_with("moe"))

area_summary_data |>
  group_by(name) |>
  gt::gt() |>
  gt::tab_options(
    row_group.as_column = TRUE
  ) |>
  gt::fmt_currency(columns = c(median_income_estimate, median_income_moe)) |>
  gt::cols_merge_uncert(median_income_estimate, median_income_moe) |>
  gt::cols_merge_uncert(total_population_estimate, total_population_moe) |>
  gt::cols_merge_uncert(occupied_units_estimate, occupied_units_moe) |>
  # gt::tab_header("Median household income") |>
  gt::opt_align_table_header() |>
  gt::cols_label(
    median_income_estimate = "Median household income",
    total_population_estimate = "Total population",
    occupied_units_estimate = "Occupied units"
  ) |>
  gt::tab_footnote(
    "USD (2021 inflation adjusted)",
    gt::cells_column_labels(median_income_estimate)
  ) |>
  gt::fmt_number(
    c(total_population_estimate, occupied_units_estimate),
    decimals = 0
  ) |>
  gt_census_source(
    tables = tables
  )

# area_summary_data |>
# ggplot() +
# aes(x = perc_estimate, y = column_title, fill = as.integer(column_title)) +
# geom_col(color = NA) +
# scale_x_continuous(labels = scales::label_percent()) +
# geom_errorbarh(aes(xmin = perc_estimate - moe_perc, xmax = perc_estimate + moe_perc), linewidth = 0.35, height = 0.35) +
# guides(fill = "none") +
# facet_wrap(~ name, ncol = 1) +
# plot_theme() +
# cols4all::scale_fill_continuous_c4a_seq()
```

```{r}
combine_acs %>%
  pull_table(table = "B25003") %>%
  filter(perc_estimate < 1, geography != "Metro area") %>%
  mutate(
    column_title = fct_recode_with_list(
      column_title,
      list(
        "Renter" = "Renter occupied",
        "Owner" = "Owner occupied"
      )
    )
  ) |>
  ggplot() +
  aes(x = perc_estimate, y = column_title, fill = column_title) +
  geom_col(color = NA) +
  plot_fill_scale(palette = "misc.okabe") +
  # scale_fill_brewer(palette = "Dark2") +
  scale_x_continuous(labels = scales::label_percent()) +
  geom_errorbarh(aes(xmin = perc_estimate - moe_perc, xmax = perc_estimate + moe_perc),
    linewidth = 0.35, height = 0.35
  ) +
  labs(
    y = "Tenure",
    x = "Occupied units (% of total)"
  ) +
  guides(fill = "none") +
  facet_wrap(~name, ncol = 1) +
  # plot_fill_scale() +
  plot_theme()

if (params$save_plot) {
  papersize::ggsave_ext(
    filename = glue::glue("{janitor::make_clean_names(select_area_label)}_tenure_plot.", select_fileext),
    width = 7,
    height = 3,
    orientation = "landscape"
    #  device = cairo_pdf,
    #  width = 6, height = 4
  )

  papersize::ggsave_ext(
    filename = glue::glue("{janitor::make_clean_names(select_area_label)}_tenure_plot.png"),
    fileext = select_fileext,
    width = 8,
    height = 3.5,
    orientation = "landscape"
    #  device = cairo_pdf,
    #  width = 6, height = 4
  )
}
```

```{r}
combine_acs %>%
  pull_table(table = "B11007") %>%
  # mutate(
  #   column_title = str_replace(column_title, ".0 to ", "-"),
  #   column_title = str_replace(column_title, " percent", " %"),
  #   column_title = fct_inorder(column_title)
  # ) |>
  filter(perc_estimate < 1) %>%
  ggplot() +
  aes(x = perc_estimate, y = column_title, fill = as.integer(column_title)) +
  geom_col(color = NA) +
  scale_x_continuous(labels = scales::label_percent()) +
  geom_errorbarh(
    aes(xmin = perc_estimate - moe_perc, xmax = perc_estimate + moe_perc),
    linewidth = 0.35, height = 0.35
  ) +
  guides(fill = "none") +
  facet_wrap(~name, ncol = 1) +
  plot_theme() +
  cols4all::scale_fill_continuous_c4a_seq()
```

# By race/ethnicity

```{r}
combine_acs |>
  pull_table(table = c("B25003", "B25003A", "B25003B", "B25003I")) |>
  bind_race_category_col() |>
  filter(
    column_title != "Total:",
    race_category != "Total"
  ) |>
  select(any_of("name"), race_category, column_title, ends_with("estimate"), contains("moe"), -moe_denom) |>
  group_by(name, race_category) |>
  gt::gt() |>
  gt::tab_options(
    # row_group.as_column = TRUE
  ) |>
  gt_census_cols()
```

```{r}
tables <- c("B19013", "B19013A", "B19013B", "B19013I")

combine_acs |>
  pull_table(table = tables) |> #  "B19013C", "B19013D", "B19013E", "B19013F", "B19013G", "B19013H",
  # View()
  bind_race_category_col() |>
  rename(
    median_income_estimate = estimate,
    median_income_moe = moe
  ) |>
  filter(name == "Baltimore City") |>
  select(
    # category,
    race_category,
    # name,
    median_income_estimate,
    median_income_moe
  ) |>
  group_by(race_category) |>
  gt::gt() |>
  gt::tab_options(
    row_group.as_column = TRUE
  ) |>
  gt::fmt_currency(
    columns = c(median_income_estimate, median_income_moe),
    decimals = 0
  ) |>
  gt::cols_merge_uncert(median_income_estimate, median_income_moe) |>
  gt::cols_label(
    "race_category" = "Race",
    "median_income_estimate" = "Median income ($)"
  ) |>
  gt_census_source(tables = tables)
```

```{r}
combine_acs |>
  pull_table(table = "B19001") |>
  filter(indent == 1) |>
  mutate(
    column_title = case_when(
      line_number <= 7 ~ "Less than $35K",
      line_number <= 10 ~ "$35K to $49K",
      line_number <= 12 ~ "$50K to $74K",
      line_number <= 14 ~ "$75K to $124K",
      line_number <= 17 ~ "$125K and more"
    ),
    column_title = forcats::fct_inorder(column_title)
  ) |>
  group_by(name, column_title) |>
  summarise(
    estimate = sum(estimate),
    moe = tidycensus::moe_sum(moe, estimate),
    perc_estimate = sum(perc_estimate)
  ) |>
  filter(name %in% c(select_area_name_plot, select_counties_name)) |>
  pivot_wider(
    names_from = "name",
    values_from = c("perc_estimate", "estimate", "moe")
  ) |>
  janitor::clean_names("snake") |>
  # names()
  gt::gt() |>
  gt::cols_merge_uncert(estimate_baltimore_city, moe_baltimore_city) |>
  # FIXME: How can this be parameterized?
  gt::cols_merge_uncert(estimate_reach_and_hh_building_area, moe_reach_and_hh_building_area) |>
  # gt::cols_merge_uncert(estimate_john_ruhrah_ems_area, moe_john_ruhrah_ems_area) |>
  gt::fmt_number(starts_with("moe"), decimals = 0) |>
  gt::fmt_number(starts_with("estimate"), decimals = 0) |>
  gt::fmt_percent(starts_with("perc_estimate"), decimals = 0) |>
  gt::tab_spanner("% share", starts_with("perc_estimate")) |>
  gt::tab_spanner("Households", c(starts_with("estimate"), starts_with("moe"))) |>
  gt::cols_label(
    "column_title" = "Income category",
    "perc_estimate_reach_and_hh_building_area" = select_area_name_plot,
    "perc_estimate_baltimore_city" = select_counties_name,
    "estimate_reach_and_hh_building_area" = select_area_name_plot,
    "estimate_baltimore_city" = select_counties_name,
  ) |>
  gt_census_source("Source: 2017-2021 ACS 5-year Estimates", tables = "B19001")
```

```{r}
race_data <- combine_acs %>%
  pull_table(table = "B03002", vars = c("B03002_003", "B03002_004", "B03002_012")) %>%
  mutate(
    column_title = fct_recode(
      column_title,
      "White" = "White alone",
      "Black" = "Black or African American alone",
      "Latino" = "Hispanic or Latino:"
    ),
    column_title = fct_relevel(column_title, c("Latino", "White", "Black"))
  )

race_data |>
  gt() |>
  gt_census_cols()

race_data %>%
  ggplot() +
  aes(x = perc_estimate, y = column_title, fill = column_title) +
  geom_col(color = NA) +
  geom_errorbarh(aes(xmin = perc_estimate - moe_perc, xmax = perc_estimate + moe_perc), size = 0.35, height = 0.35) +
  # scale_fill_brewer(palette = "Dark2") +
  scale_x_continuous(labels = scales::label_percent()) +
  labs(
    y = "Race/ethnicity",
    x = "% of total population"
  ) +
  guides(fill = "none") +
  facet_wrap(~name, ncol = 1) +
  plot_theme() +
  plot_fill_scale(palette = "misc.okabe") +
  theme(
    plot.margin = papersize::get_margin("minimal")
  )


papersize::ggsave_ext(
  filename = glue::glue("{janitor::make_clean_names(select_area_label)}_race_ethnicity_plot.png"),
  fileext = "pdf",
  width = 7,
  height = 4,
  orientation = "landscape"
  #  device = cairo_pdf,
  #  width = 6, height = 4
)

if (params$save_plot) {
  papersize::ggsave_ext(
    filename = glue::glue("{janitor::make_clean_names(select_area_label)}_race_ethnicity_plot.", select_fileext),
    fileext = "png",
    paper = "Albert",
    orientation = "landscape"
    #  device = cairo_pdf,
    #  width = 6, height = 4
  )
}
```

```{r}
combine_acs %>%
  pull_table(table = "B05002") %>%
  filter(
    variable %in% c("B05002_003", "B05002_004", "B05002_014", "B05002_021", "B05002_026"),
    name != "Baltimore MSA"
  ) %>%
  select(name, column_title, perc_estimate, moe_perc) %>%
  mutate(
    column_title = case_when(
      column_title == "Born in state of residence" ~ "Native (born in MD)",
      column_title == "Born in other state in the United States:" ~ "Native (born elsewhere in US)",
      column_title == "Naturalized U.S. citizen" ~ "Naturalized citizen (all)",
      column_title == "Not a U.S. citizen" ~ "Non-citizen (all)",
      column_title == "Latin America" ~ "Non-citizen (born in Latin America)"
    ),
    column_title = forcats::fct_inorder(column_title),
    column_title = forcats::fct_rev(column_title)
  ) %>%
  ggplot() +
  aes(x = perc_estimate, y = column_title, fill = column_title) +
  geom_col(color = NA) +
  geom_errorbarh(aes(xmin = perc_estimate - moe_perc, xmax = perc_estimate + moe_perc), size = 0.35, height = 0.35) +
  # scale_fill_brewer(palette = "Dark2") +
  scale_x_continuous(labels = scales::label_percent()) +
  labs(
    y = "Category",
    x = "Share of total population"
  ) +
  guides(fill = "none") +
  facet_wrap(~name, ncol = 1) +
  plot_theme() +
  theme(
    plot.margin = papersize::get_margin("minimal")
  ) +
  scale_fill_pilot(palette = "seven")

if (params$save_plot) {
  papersize::ggsave_ext(
    filename = select_area_label,
    postfix = "Nativity plot",
    fileext = "png",
    paper = "4 in. x 6 in.",
    orientation = "landscape"
    #  device = cairo_pdf,
    #  width = 6, height = 4
  )
}
```

```{r}
# FIXME: Consider replacing this with a plot
combine_acs |>
  pull_table(table = "B23025") |>
  filter(column_title %in% c("Employed", "Unemployed", "Not in labor force")) |>
  select(any_of("name"), column_title, ends_with("estimate"), contains("moe"), -moe_denom) |>
  group_by(name) |>
  gt::gt() |>
  gt_census_cols(
    est_col_label = "Est. population (age 16+ yrs.)",
    perc_col_label = "% of total",
    tables = "B23025"
  )
```
